get:
  summary: Payment intent request
  # description: richiesta di inizio pagamento passando due indirizzi e token utente
  description: Request to start checkout passing a token, to identify the cart, and two addresses
  tags:
    - checkout
  operationId: startCheckout
  parameters:
    - in: header
      name: Authorization
      description: token JWT
      schema:
        type: string
      required: true
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/checkout.json#/startCheckout"
        example:
          {
            shippingAddress: "1",
            billingAddress: "2"
          }
  responses:
    200:
      description: "Payment intent created"
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example: {
            status: "success",
            message: "Intent creato",
            data:
              {
                "id": "pi_1DnXg72eZvKYlo2CSIFdQHpM",
                "object": "payment_intent",
                "amount": 1099,
                "amount_capturable": 0,
                "amount_received": 0,
                "application": null,
                "application_fee_amount": null,
                "canceled_at": null,
                "cancellation_reason": null,
                "capture_method": "automatic",
                "charges": {
                  "object": "list",
                  "data": [],
                  "has_more": false,
                  "url": "/v1/charges?payment_intent=pi_1DnXg72eZvKYlo2CSIFdQHpM"
                },
                "client_secret": "pi_1DnXg72eZvKYlo2CSIFdQHpM_secret_eEpw2Szwar9mB0M78ShjFMGpV",
                "confirmation_method": "automatic",
                "created": 1546289283,
                "currency": "gbp",
                "customer": null,
                "description": null,
                "invoice": null,
                "last_payment_error": null,
                "livemode": false,
                "metadata": {},
                "next_action": null,
                "on_behalf_of": null,
                "payment_method": null,
                "payment_method_options": {},
                "payment_method_types": [
                  "card"
                ],
                "receipt_email": null,
                "review": null,
                "setup_future_usage": null,
                "shipping": null,
                "statement_descriptor": null,
                "statement_descriptor_suffix": null,
                "status": "requires_payment_method",
                "transfer_data": null,
                "transfer_group": null
              }
          }
    400:
      description: "request error"
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example:
            {
              status: "error",
              message: "Intent non creato"
            }

post:
  summary: Payment succeded
  description: Call this API after the payment was successful
  tags:
    - checkout
  operationId: completeCheckout
  parameters:
    - in: header
      name: Authorization
      description: token JWT
      schema:
        type: string
      required: true
  responses:
    200:
      description: "order confirmed"
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example:
            {
              status: "success",
              message: "ordine effettuato con successo"
            }
    400:
      description: "error request"
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example:
            {
              status: "error",
              message: "ordine non effettuato"
            }