get:
  summary: ritorna ordini
  description: ritorna la lista di tutti gli ordini effettuati se il JWT è di un venditore
  operationId: getOrders
  tags:
    - orders
  parameters:
    - in: header
      name: Authorization
      description: token JWT del venditore/cliente
      schema:
        type: string
      required: true
    - in: query
      name: status
      description: filtro stati ordini (se venditore)
      schema:
        type: string
      required: false
  responses:
    200:
      description: lista ordini
      content:
        application/json:
          schema:
            $ref: "../schemas/orders.json#/responseOrders"
          example:
            {
              status: "success",
              data: [
                {
                  orderId: "1",
                  date: "2021-03-17",
                  total: 10,
                  articleCount: 3,
                  status: "payed"
                },
                {
                  orderId: "2",
                  date: "2021-03-16",
                  total: 20,
                  articleCount: 5,
                  status: "shipped"
                },
                {
                  orderId: "3",
                  date: "2021-03-15",
                  total: 10,
                  articleCount: "2",
                  status: "cancelled"
                }
              ]
            }
    400:
      description: "ordine non ritornato"
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example: { status: "error", message: "richiesta fallita" }

post:
  summary: genera ordine
  description: genera un nuovo ordine a partire da un carrello
  operationId: placeOrder
  tags:
    - orders
  parameters:
    - in: header
      name: Authorization
      description: token JWT del cliente
      schema:
        type: string
      required: true
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/orders.json#/placeOrder"
        example:
          {
            userId: "1",
            products: # lista prodotti acquistati
              [
                {
                  id: "prodotto1",
                  name: "prodotto 1",
                  price: 3,
                  quantity: 5
                },
                {
                  id: "prodotto2",
                  name: "prodotto 2",
                  price: 1,
                  quantity: 3
                }
              ],
            shippingAddress:
              {
                recipientName: "donald",
                recipientSurname: "duck",
                address: "Via Portesin 18",
                city: "Padova",
                code: "35131",
                district: "PD"
              },
            billingAddress:
              {
                recipientName: "donald",
                recipientSurname: "duck",
                address: "Via Portesin 18",
                city: "Padova",
                code: "35131",
                district: "PD"
              },
            status: "payed",
          }
  responses:
    200:
      description: ordine inserito con successo
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example:
            {
              status: "success",
              message: "ordine inserito con successo"
            }
    400:
      description: ordine non inserito
      content:
        application/json:
          schema:
            $ref: "../schemas/response.json#/response"
          example:
            {
              status: "error",
              message: "ordine non inserito"
            }